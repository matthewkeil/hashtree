name: test
on: [pull_request, workflow_dispatch]

jobs:
  linux-gcc:
    name: linux-gcc
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build
        run: make all
      - name: Run tests
        run: ./build/test

  linux-clang:
    name: linux-clang
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build
        run: CC=clang make all
      - name: Run tests
        run: ./build/test

  windows:
    name: windows
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install MinGW
        run: |
          choco install mingw
          echo "C:\tools\mingw64\bin" >> $GITHUB_PATH

      - name: Build
        run: make all
        shell: bash
        
      - name: Run tests
        run: ./build/test.exe
        shell: bash

  macos:
    name: macos
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build
        run: make all
      - name: Run tests
        run: ./build/test

  rust-bindings:
    runs-on: ubuntu-latest
    name: (${{ matrix.target }})
    strategy:
      matrix:
        target: [
          aarch64-apple-darwin,
          x86_64-unknown-linux-gnu,
          aarch64-unknown-linux-gnu,
          x86_64-unknown-linux-musl,
          aarch64-unknown-linux-musl,
          x86_64-pc-windows-msvc,
          aarch64-pc-windows-msvc
        ]
    steps:
    - name: checkout
      uses: actions/checkout@v3
    - name: install rustup
      run: |
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs > rustup-init.sh
        sh rustup-init.sh -y --default-toolchain none
        rustup target add ${{ matrix.target }}
    - name: Build and Test
      run: |
        cargo build --release
        cargo test

  nim:
    name: nim
    runs-on: ubuntu-latest
    steps:
      - uses: jiro4989/setup-nim-action@v1
      - uses: actions/checkout@v3
      - name: Run Nim test
        run: nim c -r tests/test_hashtree_abi.nim
